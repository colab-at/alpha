// variables.scss
// Global variables

// Dimensions
// 1 REM = 16px
// 5 rem = 80px
// 10 rem = 160px
// 20 rem = 320px
$col: 10rem;
//
$wide:		$col * 8;	// 1280px
$mid:		$col * 6;	// 960px
$small:		$col * 5;	// 800px
$mobile:	414px; // iPhone 6s

//
$padding-normal: $col / 4;
$padding-small: $col / 8;
//
$header-height:	$col;
$header-width:	$col + ($padding-normal * 2);
$cover-height:	$col * 5; //800px
$sidebar-width:	$col * 2;

// Border radius
$radius-small: 4px;
$radius-smaller: 2px;

// Z-index
$z-highest:	999;
$z-higher:	888;
$z-high:	777;
$z-low:		333;
$z-lower:	222;
$z-lowest:	111;

// Fonts
$extra-bold:	800;
$bold:			700;
$medium:		600;
$italic:		400italic;
$regular:		400;
$light:			300;

$font-biggest:	3rem;
$font-bigger:	2rem;
$font-big:		1.5rem;
$font-plus:		1.3rem;
$font-normal:	1.1rem;
$font-small:	1rem;
$font-smaller:	0.9rem;
$font-smallest:	0.8rem;



// Colors
$colab-red:		#ff6633;
$blue-darker: 	#006699;
$blue-dark: 	#0b87c3;
$blue:		 	#11a9f4;
$blue-light: 	#00ffff;
$yellow-light: 	#ffff00;
$black:			#000;
$grey-darkest:	#333;
$grey-darker:	#666;
$grey-dark:		#999;
$grey:			#ccc;
$grey-light: 	#ddd;
$grey-lighter: 	#e6e6e6;
$grey-lightest: #f5f5f5;
$white: 		#fff;


$colors: (
	colab-red: (
		background-color: #ff6633,
		color: #fff
	),
	colab-blue: (
		background-color: #336699, 
		color: #fff
	),
	//
	"blue": (
		background-color: #0099ff,
		color: inherit
	),
	blue-light: (
		background-color: #00ffff,
		color: inherit
	),
	yellow-light: (
		background-color: #ffff00,
		color: inherit
	),
	grey-light: (
		background-color: #eee,
		color: inherit
	),
	"white": (
		background-color: #fff,
		color: #0099FF
	)
);

// Categories styles
$tags: (
	colab-red: (
		background-color: $colab-red,
		color: #fff
	),
	about: (
		background-color: $blue-dark,
		color: #fff
	),
	blue-dark: (
		background-color: $blue-dark,
		color: #fff
	),
	"blue": (
		background-color: $blue,
		color: inherit
	),
	blue-light: (
		background-color: $blue-light,
		color: inherit
	),
	yellow-light: (
		background-color: $yellow-light,
		color: inherit
	),
	"white": (
		background-color: $white,
		color: #0099FF
	)
);




// FUNCTIONS

/// Map deep get
/// @author Hugo Giraudel
/// @access public
/// @param {Map} $map - Map
/// @param {Arglist} $keys - Key chain
/// @return {*} - Desired value
@function map-deep-get($map, $keys...) {
    @each $key in $keys {
        $map: map-get($map, $key);
    }
    @return $map;
}

// Get color value from respective name
@function color($key) {
	@if map-has-key($colors, $key) {
		@return map-deep-get($colors, $key, "background-color");
	}

	@warn "Unknown `#{$key}` in $colors.";
	@return null;
}




// MIXINS

/**
 * Fix for vw, vh, vmin, vmax on iOS 7.
 * http://caniuse.com/#feat=viewport-units
 *
 * @author BenMorel
 * https://gist.github.com/BenMorel/e9e34c08360ebbbd0634
 *
 * This fix works by replacing viewport units with px values on known screen sizes.
 *
 * iPhone 6 and 6 Plus cannot run iOS 7, so are not targeted by this fix.
 * Target devices running iOS 8+ will incidentally execute the media query,
 * but this will still produce the expected result; so this is not a problem.
 *
 * As an example, replace:
 *
 *   height: 50vh;
 *   font-size: 5vmin;
 *
 * with:
 *
 *   @include viewport-unit(height, 50vh);
 *   @include viewport-unit(font-size, 5vmin);
 */
@mixin viewport-unit($property, $value) {
	#{$property}: $value;

	$unit: unit($value);

	@if (index((vw, vh, vmin, vmax), $unit) != null) {
		$devices: (
			(768px, 1024px),	// iPad (all versions)
			(320px, 480px),	// iPhone 4
			(320px, 568px),	// iPhone 5, 5C, 5S
			(375px, 667px),	// iPhone 6
			(414px, 736px)	// iPhone 6+
		);

		@each $device in $devices {
			$device-width: nth($device, 1);
			$device-height: nth($device, 2);

			$device-query: "only screen and (-webkit-min-device-pixel-ratio: 1)";
			$device-query: "#{$device-query} and (device-width: #{$device-width})";
			$device-query: "#{$device-query} and (device-height: #{$device-height})";

			$percent: $value / ($value * 0 + 1); // see https://github.com/sass/sass/issues/533

			$percent-width: $device-width * $percent / 100;
			$percent-height: $device-height * $percent / 100;

			@if ($unit == vmin or $unit == vmax) {
				@media #{$device-query} {
					#{$property}: if($unit == vmin, $percent-width, $percent-height);
				}	
			}
			@else {
				@media #{$device-query} and (orientation: portrait) {
					#{$property}: if($unit == vw, $percent-width, $percent-height);
				}

				@media #{$device-query} and (orientation: landscape) {
					#{$property}: if($unit == vw, $percent-height, $percent-width);
				}
			}

		}
	}
} 
